{% set name = "pymultinest" %}
{% set version = "2.2" %}
{% set hash_type = "sha256" %}
{% set hash_value = "4d68e49c35d8416e6e722fdd040bdedcf3cb7f3237796cac6d6447cbdfbf94f7" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.tar.gz'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  script: python setup.py install  --single-version-externally-managed --record=record.txt

requirements:
  build:
    - python
    - multinest
    - setuptools
  run:
    - python
    - multinest
    - numpy
    - scipy

test:
  imports:
    - pymultinest

about:
  home: http://johannesbuchner.github.com/PyMultiNest/
  license: GPLv3
  license_family: GPL3
  license_file: ''
  summary: Access modules for the MultiNest, APEMoST, Cuba and PolyChord integration libraries
  description: "PyMultiNest -- Python interface for MultiNest\n==============================================\n\nThis library provides programmatic access to MultiNest and PyCuba.\n\nWhat is MultiNest?\n\
    -------------------\n\nMultiNest is a program and a sampling technique. As a Bayesian inference technique,\nit allows parameter estimation and model selection. (find out more in the \nMultiNest paper,\
    \ http://arxiv.org/abs/0809.3437, or in a classic MCMC sampler, \nhttp://apemost.sf.net/ ). Recently, MultiNest added Importance Nested Sampling \n(INS, see http://arxiv.org/abs/1306.2144) which is\
    \ now also supported.\n\nThe efficient Monte Carlo algorithm for sampling the parameter space is based \non nested sampling and the idea of disjoint multi-dimensional ellipse sampling.\n\nFor the scientific\
    \ community, where Python is becoming the new lingua franca (luckily),\nI provide an interface to MultiNest.\n\nWhat does PyMultiNest do?\n--------------------------\n\nPyMultiNest \n\n  * provides\
    \ an easy-to-use interface to MultiNest\n\n  * provides integration with your existing scientific Python code (numpy, scipy)\n\n  * allows you to write Prior & LogLikelihood functions in Python.\n\n\
    PyMultiNest can \n\n  * Plot and visualize MultiNests progress (watch.ProgressWatcher, watch.ProgressPlotter). This is still fairly basic, contributions and ideas are welcome)\n\n  * Easy plotting,\
    \ visualization and summary of MultiNest results.\n\nThe plotting can be run on existing MultiNest output, and when not using PyMultiNest for running MultiNest.\n\nCode contributions are welcome! Contact\
    \ me (buchner.johannes [\xE4t] gmx.at).\n\nHow can I use MultiNest with Python?\n--------------------------------------------\nLook at the documentation available at http://johannesbuchner.github.com/PyMultiNest/index.html\n\
    \nCiting PyMultiNest\n--------------------------------------------\nSee the documentation at http://johannesbuchner.github.com/PyMultiNest/index.html\n\nWhat is PyAPEMoST?\n--------------------------------------------\n\
    Similarly to PyMultiNest, it is an access module for a Bayesian inference engine.\nHowever, APEMoST is a Markov Chain Monte Carlo engine. See the `documentation <http://johannesbuchner.github.com/PyMultiNest/pyapemost>`_.\n\
    \nWhat is PyCuba?\n--------------------------------------------\nCuba (http://www.feynarts.de/cuba/, https://github.com/JohannesBuchner/cuba) is a multidimensional numerical integration library for\
    \ low dimensions. PyCuba allows integration of Python functions, providing an advanced alternative to the basic functions provided in scipy.integrate.\n\nIn the Bayesian sense, it is possible to use\
    \ Cuba for model selection.\n\nQ: Python callback functions are too slow!\n-------------------------------------------\nIf you really identified that your callback functions are too slow, even\nwhen\
    \ using the usual tricks (numpy, etc.), you can implement and compile \nthem as C functions.\n\nYou still have the neat python interface (default parameters, etc.), but\nachieve full execution speed,\
    \ as only native code is executed while\nMultiNest runs.\n\n\n\n"
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers: ''
